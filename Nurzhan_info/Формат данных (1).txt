2022.04.19

Формат данных.

Старый вариант.

Непрерывно передаются пары байтов. Которые являются 16-битными словами.
В словах передаются значения из АЦП, который может работать в 10-битном или в 12-битном режиме.
В младшем байте слова возможны все значения от 0 до 255.
А в старшем используются только 2 или 4 младших бита, а старшие всегда нули.

Чтоб разобраться, какой из байтов младший, достаточно смотреть на старшие биты каждого байта.
Если значение больше 15 = 0x0F = 0b00001111, то это точно младший байт.
Это если режим АЦП 12-битный.
Или 0b00000011, если режим 10-битный.

В самом древнем варианте, кроме значений АЦП, передавалась ещё служебная инфа.
Чтоб отличить её, в старшем байте некоторые старшие биты устанавливались в единицу.
Если не склероз, то это было при 10-битном АЦП, а устанавливался бит 0b00000100.
Тогда в слове получалось значение больше 1023, что-то около 1500.
Эти слова надо просто игнорировать/выбрасывать.

Полученный ряд значений -- это напряжение на выходе усилителя.
Оно непрерывно немного колеблется за счёт шумов.
Но иногда прилетает нейтрон, в счётчике возникает заряд, усилитель выдаёт импульс.
Надо увидеть форму и величину импульса.
Для этого надо устанавливать регулируемый вручную порог и, если в принимаемых данных значение выскочит за порог, 
десяток данных до превышения и пару десятков после записывать и показывать в виде графика.

См. файлы Пример

Для этой формы импульсов на скользящем интервале длиной 10 отсчётов искались минимальное и максимальное значение.
И их разница и должна была превышать порог.

-----

Новый вариант.
Далёкое будущее?

Компьютер посылает команды чтения нескольким устройствам.
Устройства физически подключены через RS485.
Для программы это всё тот же компорт.
У каждого устройства свой адрес.
И они отвечают, посылая данные.
Всё текстовое.

Надо уметь по часам посылать команды, надо смотреть на разницу между новыми и старыми данными.
Образец программы для писюка и инструкция юзера есть.
